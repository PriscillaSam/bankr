{
   "swagger": "2.0",
   "info": {
      "version": "1.0",
      "title": "BANKR",
      "description": "Secure online banking application. Easy to use, efficient, fast."
   },
   "schemes": [
      "https"
   ],
   "securityDefinitions": {
      "Bearer": {
         "type": "apiKey",
         "name": "Authorization",
         "in": "header"
      }
   },
   "host": "bankr-server.herokuapp.com",
   "basePath": "/api/v1",
   "tags": [
      {
         "name": "Auth",
         "description": "Auth endpoints"
      },
      {
         "name": "Users",
         "description": "Users endpoints"
      },
      {
         "name": "Accounts",
         "description": "Accounts endpoints"
      },
      {
         "name": "Transactions",
         "description": "Transactions endpoints"
      }
   ],
   "paths": {
      "/auth/signup": {
         "post": {
            "description": "Create user",
            "summary": "Create a new user account",
            "tags": [
               "Auth"
            ],
            "produces": [
               "application/json"
            ],
            "security": [],
            "parameters": [
               {
                  "in": "body",
                  "name": "signup details",
                  "required": true,
                  "description": "User signup details",
                  "schema": {
                     "$ref": "#/components/schemas/signupDetails"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Signup successful"
               },
               "400": {
                  "description": "Empty or invalid field"
               },
               "default": {
                  "description": "Unexpected error"
               },
               "schema": {
                  "$ref": "#/components/schemas/userResponse"
               }
            }
         }
      },
      "/auth/signin": {
         "post": {
            "description": "Log user in",
            "summary": "Login authenticated user",
            "tags": [
               "Auth"
            ],
            "produces": [
               "application/json"
            ],
            "security": [],
            "parameters": [
               {
                  "in": "body",
                  "name": "login details",
                  "required": true,
                  "description": "User login details",
                  "schema": {
                     "$ref": "#/components/schemas/signinDetails"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Login successful"
               },
               "400": {
                  "description": "Empty or invalid field"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/users": {
         "get": {
            "description": "Get users",
            "summary": "Returns a list of all user accounts",
            "tags": [
               "Users"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "No user records found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/users/{userId}": {
         "get": {
            "description": "Get user",
            "summary": "Returns a user with the given userId",
            "tags": [
               "Users"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "userId",
                  "required": true,
                  "description": "The id of the user to fetch",
                  "schema": {
                     "$ref": "#/components/schemas/userId"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "User with given id not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/accounts/": {
         "post": {
            "description": "Create bank account",
            "summary": "Create a new bank account",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "required": true,
                  "description": "Account creation details",
                  "schema": {
                     "$ref": "#/components/schemas/accountDetails"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Account creation was successful"
               },
               "400": {
                  "description": "Empty or invalid field"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         },
         "get": {
            "description": "Get accounts",
            "summary": "Returns a list of all bank accounts",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "No account records found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/accounts?status=active": {
         "get": {
            "description": "Get the list of active accounts",
            "summary": "Returna all active accounts",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "query",
                  "name": "status",
                  "required": true,
                  "description": "Accounts' status",
                  "schema": {
                     "$ref": "#/components/schemas/statusActive"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Success"
               },
               "400": {
                  "description": "Empty or invalid field"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/accounts?status=dormant": {
         "get": {
            "description": "Get the list of dormant accounts",
            "summary": "Returns all dormant accounts",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "query",
                  "name": "status",
                  "required": true,
                  "description": "Accounts' status",
                  "schema": {
                     "$ref": "#/components/schemas/statusDormant"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Success"
               },
               "400": {
                  "description": "Empty or invalid field"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/users/{email}/accounts": {
         "get": {
            "description": "Get user accounts",
            "summary": "Returns all accounts of user with the given email",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "email",
                  "required": true,
                  "description": "The email of the account owner",
                  "schema": {
                     "$ref": "#/components/schemas/email"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Account with given email not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/accounts/{accountNumber}": {
         "get": {
            "description": "Get account",
            "summary": "Get the account with given account number",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the bank account to be fetched",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Bank account not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         },
         "patch": {
            "description": "Update account",
            "summary": "Update the account with given account number",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the account to be updated",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               },
               {
                  "in": "body",
                  "name": "status",
                  "required": true,
                  "description": "The new status to set the account to",
                  "schema": {
                     "$ref": "#/components/schemas/accountUpdate"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Bank account not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         },
         "delete": {
            "description": "Delete account",
            "summary": "Delete the account with given accountNumber",
            "tags": [
               "Accounts"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the account to be deleted",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Bank account not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/accounts/{accountNumber}/transactions": {
         "get": {
            "description": "View account transaction history",
            "summary": "Returns the transaction history of the given account number",
            "tags": [
               "Transactions"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the account transactions",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "No transactions found for given account"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/transactions/{transactionId}": {
         "get": {
            "description": "Get transaction",
            "summary": "Get the transaction with given transactionId",
            "tags": [
               "Transactions"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "transactionId",
                  "required": true,
                  "description": "The id of the transaction to be fetched",
                  "schema": {
                     "$ref": "#/components/schemas/transactionId"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Transaction record not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/transactions": {
         "get": {
            "description": "Get transactions",
            "summary": "Returns a list of all transaction",
            "tags": [
               "Transactions"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "No transaction records Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/transactions/{accountNumber}/credit": {
         "post": {
            "description": "Credit an account",
            "summary": "Credit the account with the given account number",
            "tags": [
               "Transactions"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the account to be credited",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               },
               {
                  "in": "body",
                  "name": "Credit data",
                  "required": true,
                  "description": "Credit transaction details",
                  "schema": {
                     "$ref": "#/components/schemas/creditTransaction"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Bank account not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      },
      "/transactions/{accountNumber}/debit": {
         "post": {
            "description": "Debit account",
            "summary": "Debit the bank account with given accountNumber",
            "tags": [
               "Transactions"
            ],
            "produces": [
               "application/json"
            ],
            "security": [
               {
                  "Bearer": []
               }
            ],
            "parameters": [
               {
                  "in": "path",
                  "name": "accountNumber",
                  "required": true,
                  "description": "The account number of the bank account to be debited",
                  "schema": {
                     "$ref": "#/components/schemas/accountNumber"
                  }
               },
               {
                  "in": "body",
                  "name": "debit data",
                  "required": true,
                  "description": "Debit transaction details",
                  "schema": {
                     "$ref": "#/components/schemas/debitTransaction"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success"
               },
               "404": {
                  "description": "Bank account not Found"
               },
               "default": {
                  "description": "Unexpected error"
               }
            }
         }
      }
   },
   "components": {
      "securitySchemes": {
         "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
         }
      },
      "schemas": {
         "signupDetails": {
            "title": "Signup Details",
            "type": "object",
            "properties": {
               "firstName": {
                  "description": "user firstname",
                  "type": "string"
               },
               "lastName": {
                  "description": "user lastname",
                  "type": "string"
               },
               "email": {
                  "description": "user email",
                  "type": "string"
               },
               "password": {
                  "description": "user password",
                  "type": "string"
               },
               "type": {
                  "description": "user type",
                  "type": "string"
               }
            },
            "example": {
               "firstName": "Mubarak",
               "lastName": "Aderopo",
               "email": "ademubarak@gmail.com",
               "password": "truenigerian",
               "type": "client"
            },
            "required": [
               "firstName, lastName, email, password, type"
            ]
         },
         "signinDetails": {
            "title": "Signin Details",
            "type": "object",
            "properties": {
               "email": {
                  "description": "user email",
                  "type": "string"
               },
               "password": {
                  "description": "user password",
                  "type": "string"
               }
            },
            "example": {
               "email": "ademubarak@gmail.com",
               "password": "truenigerian"
            },
            "required": [
               "email, password"
            ]
         },
         "userId": {
            "title": "User's id",
            "type": "integer",
            "example": 1,
            "required": true
         },
         "accountNumber": {
            "title": "Account number of bank account",
            "type": "integer",
            "example": 1012934423,
            "required": true
         },
         "accountDetails": {
            "title": "Account Details",
            "type": "object",
            "properties": {
               "accountNumber": {
                  "description": "new account number",
                  "type": "integer"
               },
               "owner": {
                  "description": "account owner's id",
                  "type": "integer"
               },
               "type": {
                  "description": "account type",
                  "type": "string"
               },
               "openingBalance": {
                  "description": "new account opening balance",
                  "type": "float"
               },
               "status": {
                  "description": "new account status",
                  "type": "string"
               }
            },
            "example": {
               "accountNumber": 1023004807,
               "owner": 2,
               "type": "savings",
               "openingBalance": 4500,
               "status": "dormant"
            },
            "required": [
               "accountNumber, owner, type, openingBalance, status"
            ]
         },
         "accountUpdate": {
            "title": "Account update details",
            "type": "object",
            "properties": {
               "status": {
                  "description": "new account status",
                  "type": "string"
               }
            },
            "example": {
               "status": "active"
            },
            "required": [
               "status"
            ]
         },
         "transactionId": {
            "title": "Transaction's id",
            "type": "integer",
            "example": 2,
            "required": true
         },
         "email": {
            "title": "User's email",
            "type": "string",
            "example": "alicen1995@yahoo.com",
            "required": true
         },
         "creditTransaction": {
            "title": "Credit transaction details",
            "type": "object",
            "properties": {
               "amount": {
                  "description": "credit amount",
                  "type": "float"
               },
               "cashier": {
                  "description": "cashier's user id",
                  "type": "integer"
               },
               "type": {
                  "description": "transaction type",
                  "type": "string"
               }
            },
            "example": {
               "amount": 20000,
               "cashier": 4,
               "type": "credit"
            },
            "required": [
               "amount, cashier, type"
            ]
         },
         "statusActive": {
            "title": "Active status query parameter",
            "type": "string",
            "example": "active",
            "required": true
         },
         "statusDormant": {
            "title": "Dormant status query parameter",
            "type": "string",
            "example": "dormant",
            "required": true
         },
         "debitTransaction": {
            "title": "Debit transaction details",
            "type": "object",
            "properties": {
               "amount": {
                  "description": "debit amount",
                  "type": "float"
               },
               "cashier": {
                  "description": "cashier's user id",
                  "type": "integer"
               },
               "type": {
                  "description": "transaction type",
                  "type": "string"
               }
            },
            "example": {
               "amount": 300,
               "cashier": 3,
               "type": "debit"
            },
            "required": [
               "amount, cashier, type"
            ]
         },
         "userResponse": {
            "example": {
               "firstname": "Esther",
               "lastname": "Obi",
               "email": "estherobi@live.com",
               "password": "africangirl",
               "type": "client",
               "isAdmin": false
            }
         }
      }
   }
}